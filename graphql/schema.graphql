type User {
  uid: Int!
  user_id: String
  user_name: String
  createdAt: String
  updatedAt: String
}

type Portfolio {
  uid: Int!
  content: String
  image: String
  createdAt: String
  updatedAt: String
}

type CareersProject {
  uid: Int!
  content: String
  company: String
  createdAt: String
  updatedAt: String
}

type CareersCompany {
  uid: Int!
  name: String
  createdAt: String
  updatedAt: String
}

type Query {
  user(name:String): User
  users(limit: Int, offset: Int): [User]!
  portfolios(limit: Int, offset: Int): [Portfolio]!
  careersProjects(limit: Int, offset: Int): [CareersProject]!
  careersCompanys(limit: Int, offset: Int): [CareersCompany]!
}

type Mutation {
  addUser(userId: String!, userName: String!): Boolean
  addPortfolio(content: String!, image: String!): Boolean
  addCareersCompany(name: String!, name: String!): Boolean
}